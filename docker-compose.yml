version: "3.8"

services:
  # User service
  user-service:
    container_name: 'user_service'
    build:
      context: .
      dockerfile: services/user-service/Dockerfile.dev
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8001/" ]
      interval: 1m
      timeout: 3s
      start_period: 10s
      retries: 3
    ports:
      - '8001:8001'
    networks:
      - docker_net

  # Vault server UI can be viewed at http://localhost:8200/ui
  vault-dev-server:
    image: hashicorp/vault:latest
    container_name: vault_dev_server
    restart: always
    volumes:
      - /vault/data
      - /etc/vault/logs
    ports:
      - '8200:8200'
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 'token-root-dont-use-in-production'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
    cap_add:
      - IPC_LOCK
    networks:
      - docker_net
    entrypoint: "vault server -dev"

  # Vault client to initialize secret engines and to inject secrets in vault-server
  vault-dev-client:
    container_name: vault_dev_client
    build:
      context: .
      dockerfile: docker/Dockerfile.vault_client.dev
    environment:
      VAULT_ADDR: 'http://vault_dev_server:8200'
      VAULT_DEV_ROOT_TOKEN_ID: 'token-root-dont-use-in-production'
    networks:
      - docker_net

  mongodb:
    image: 'mongo:latest'
    container_name: 'mongodb'
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'test_user'
      MONGO_INITDB_ROOT_PASSWORD: 'test_password'
    networks:
      - docker_net

  # Opentelemetry - jaeger, UI available on http://localhost:16686/
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: 'jaeger'
    restart: always
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '9411:9411'
    networks:
      - docker_net

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: redis-server --requirepass test_password
    ports:
      - '6379:6379'
    networks:
      - docker_net

networks:
  docker_net:
